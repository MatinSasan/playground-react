{"version":3,"sources":["components/Person/Person.js","components/Persons.js","components/Length/LengthChild.js","components/Length/LengthMother.js","components/HelloComponent.js","hoc/Aucs.js","components/Head.js","components/AwesomePhrase/AwesomePhrase.js","container/App.js","serviceWorker.js","index.js"],"names":["Person","props","react_default","a","createElement","className","onClick","click","name","age","children","mobin","type","onChange","changed","value","Persons","persons","map","person","index","components_Person_Person","key","id","LengthChild","Fragment","LengthConsumer","length","LengthMother","Length_LengthChild","HelloComponent","Length_LengthMother","aucs","Head","Aucs","disabled","components_HelloComponent","AwesomePhrase","awesomePhrase","classes","presence","push","console","log","LengthContext","React","createContext","LengthProvider","Provider","Consumer","App","state","VIP","showPersons","nameHandler","newName","Object","objectSpread","_this","toConsumableArray","setState","inputHandler","event","target","deleteHandler","filter","some","p","switchHandler","doesShow","_this2","this","btn","padding","marginTop","width","border","cursor","backgroundColor","color","components_Head","bind","components_Persons","style","components_AwesomePhrase_AwesomePhrase","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_container_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67176994.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Person.css';\r\n\r\nconst Person = props => {\r\n  return (\r\n    <div className=\"Person\">\r\n      <h3 onClick={props.click}>\r\n        This is {props.name} {props.age}\r\n      </h3>\r\n      <div>{props.children}</div>\r\n      <br />\r\n      <div>\r\n        {props.mobin ? (\r\n          <input type=\"text\" onChange={props.changed} value={props.name} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person/Person';\r\n\r\nconst Persons = props =>\r\n  props.persons.map((person, index) => {\r\n    return (\r\n      <Person\r\n        key={person.id}\r\n        name={person.name}\r\n        age={person.age}\r\n        click={() => props.click(person.id)}\r\n      />\r\n    );\r\n  });\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\nimport { LengthConsumer } from '../../container/App';\r\n\r\nconst LengthChild = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <LengthConsumer>\r\n        {length => (\r\n          <h3>\r\n            {'People left: '}\r\n            {length}\r\n          </h3>\r\n        )}\r\n      </LengthConsumer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LengthChild;\r\n","import React from 'react';\r\nimport LengthChild from './LengthChild';\r\n\r\nconst LengthMother = () => <LengthChild />;\r\n\r\nexport default LengthMother;\r\n","import React from 'react';\r\nimport Person from './Person/Person';\r\nimport LengthMother from './Length/LengthMother';\r\n\r\nconst HelloComponent = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <LengthMother />\r\n      <Person changed={props.changed} name={props.name} mobin={props.mobin}>\r\n        Hello there {':)'}\r\n      </Person>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HelloComponent;\r\n","const aucs = props => props.children;\r\n\r\nexport default aucs;","import React from 'react';\r\nimport HelloComponent from './HelloComponent';\r\nimport '../container/App.css';\r\nimport Aucs from '../hoc/Aucs';\r\n\r\nconst Head = props => {\r\n  return (\r\n    <Aucs>\r\n      <button\r\n        disabled={props.disabled}\r\n        className=\"btn call\"\r\n        onClick={props.onClick}>\r\n        Call me\r\n      </button>\r\n\r\n      <HelloComponent\r\n        changed={props.changed}\r\n        name={props.name}\r\n        mobin={props.mobin}\r\n      />\r\n    </Aucs>\r\n  );\r\n};\r\n\r\nexport default Head;\r\n","import React from 'react';\r\nimport './AwesomePhrase.css';\r\n\r\nconst AwesomePhrase = props => {\r\n  let awesomePhrase = '';\r\n  const classes = [];\r\n  if (!props.presence) {\r\n    awesomePhrase = 'Nobody is here, it seems :/';\r\n  }\r\n  if (props.presence && props.length === 2) {\r\n    awesomePhrase = 'All aboard :D';\r\n  }\r\n  if (props.length === 1) {\r\n    classes.push('bold');\r\n  }\r\n  if (props.length === 0) {\r\n    classes.push('all');\r\n  }\r\n  console.log(props.length);\r\n\r\n  return <h2 className={classes}>{props.awesomePhrase || awesomePhrase}</h2>;\r\n};\r\n\r\nexport default AwesomePhrase;\r\n","import React, { Component } from 'react';\r\n\r\nimport Persons from '../components/Persons';\r\nimport Head from '../components/Head';\r\nimport AwesomePhrase from '../components/AwesomePhrase/AwesomePhrase';\r\n\r\nimport './App.css';\r\n\r\nconst LengthContext = React.createContext({});\r\nexport const LengthProvider = LengthContext.Provider;\r\nexport const LengthConsumer = LengthContext.Consumer;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    persons: [\r\n      { id: 1, name: 'Matin', age: 27 },\r\n      { id: 2, name: 'Mobin', age: 26 }\r\n    ],\r\n    VIP: { name: 'React' },\r\n    showPersons: false,\r\n    mobin: true,\r\n    awesomePhrase: ''\r\n  };\r\n\r\n  nameHandler = newName => {\r\n    const person = { ...this.state.persons[0] };\r\n    const persons = [...this.state.persons];\r\n\r\n    if (this.state.persons[0].name === newName) {\r\n      person.name = 'Matin';\r\n    } else {\r\n      person.name = newName;\r\n    }\r\n    persons[0] = person;\r\n    this.setState({ persons });\r\n  };\r\n\r\n  inputHandler = event => {\r\n    this.setState({\r\n      VIP: { name: event.target.value, age: 'immortal' }\r\n    });\r\n  };\r\n\r\n  deleteHandler = id => {\r\n    const persons = [...this.state.persons].filter(person => person.id !== id);\r\n\r\n    if (persons.length === 0) {\r\n      this.setState({ awesomePhrase: 'where did they all go?' });\r\n    }\r\n\r\n    if (persons.some(p => p.name !== 'Mobin')) {\r\n      this.setState({ awesomePhrase: 'Where is Mobin?' });\r\n    }\r\n    if (persons.some(p => p.name !== 'Matin')) {\r\n      this.setState({ awesomePhrase: 'Where is Matin?' });\r\n    }\r\n\r\n    this.setState({ persons });\r\n  };\r\n\r\n  switchHandler = () => {\r\n    const doesShow = this.state.showPersons;\r\n    this.setState({ showPersons: !doesShow });\r\n  };\r\n\r\n  render() {\r\n    // styling\r\n\r\n    const btn = {\r\n      padding: '8px',\r\n      marginTop: '20px',\r\n      width: '100px',\r\n      border: '1px solid #eee',\r\n      cursor: 'pointer',\r\n      backgroundColor: 'green',\r\n      color: 'white'\r\n    };\r\n\r\n    // toggle\r\n    let persons = null;\r\n    if (this.state.showPersons) {\r\n      persons = (\r\n        <div className=\"person\">\r\n          <LengthProvider value={this.state.persons.length}>\r\n            <Head\r\n              disabled={this.state.persons.length === 0}\r\n              onClick={this.nameHandler.bind(this, 'Mat')}\r\n              changed={this.inputHandler}\r\n              name={this.state.VIP.name}\r\n              mobin={this.state.mobin}\r\n            />\r\n          </LengthProvider>\r\n          <Persons persons={this.state.persons} click={this.deleteHandler} />\r\n        </div>\r\n      );\r\n      btn.backgroundColor = 'red';\r\n      btn.color = 'white';\r\n    }\r\n\r\n    // Final render\r\n    return (\r\n      <div className=\"App\">\r\n        <button style={btn} onClick={() => this.switchHandler()}>\r\n          Toggle\r\n        </button>\r\n        <AwesomePhrase\r\n          presence={this.state.showPersons}\r\n          length={this.state.persons.length}\r\n          awesomePhrase={this.state.awesomePhrase}\r\n        />\r\n        {persons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}